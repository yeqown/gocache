// Code generated by MockGen. DO NOT EDIT.
// Source: codec/interface.go

// Package mocks is a generated GoMock package.
package mocks

import (
	codec "github.com/eko/gocache/codec"
	store "github.com/eko/gocache/store"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockCodecInterface is a mock of CodecInterface interface
type MockCodecInterface struct {
	ctrl     *gomock.Controller
	recorder *MockCodecInterfaceMockRecorder
}

// MockCodecInterfaceMockRecorder is the mock recorder for MockCodecInterface
type MockCodecInterfaceMockRecorder struct {
	mock *MockCodecInterface
}

// NewMockCodecInterface creates a new mock instance
func NewMockCodecInterface(ctrl *gomock.Controller) *MockCodecInterface {
	mock := &MockCodecInterface{ctrl: ctrl}
	mock.recorder = &MockCodecInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockCodecInterface) EXPECT() *MockCodecInterfaceMockRecorder {
	return m.recorder
}

// Get mocks base method
func (m *MockCodecInterface) Get(key interface{}) (interface{}, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", key)
	ret0, _ := ret[0].(interface{})
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get
func (mr *MockCodecInterfaceMockRecorder) Get(key interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockCodecInterface)(nil).Get), key)
}

// Set mocks base method
func (m *MockCodecInterface) Set(key, value interface{}, options *store.Options) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Set", key, value, options)
	ret0, _ := ret[0].(error)
	return ret0
}

// Set indicates an expected call of Set
func (mr *MockCodecInterfaceMockRecorder) Set(key, value, options interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Set", reflect.TypeOf((*MockCodecInterface)(nil).Set), key, value, options)
}

// Delete mocks base method
func (m *MockCodecInterface) Delete(key interface{}) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Delete", key)
	ret0, _ := ret[0].(error)
	return ret0
}

// Delete indicates an expected call of Delete
func (mr *MockCodecInterfaceMockRecorder) Delete(key interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockCodecInterface)(nil).Delete), key)
}

// Invalidate mocks base method
func (m *MockCodecInterface) Invalidate(options store.InvalidateOptions) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Invalidate", options)
	ret0, _ := ret[0].(error)
	return ret0
}

// Invalidate indicates an expected call of Invalidate
func (mr *MockCodecInterfaceMockRecorder) Invalidate(options interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Invalidate", reflect.TypeOf((*MockCodecInterface)(nil).Invalidate), options)
}

// Clear mocks base method
func (m *MockCodecInterface) Clear() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Clear")
	ret0, _ := ret[0].(error)
	return ret0
}

// Clear indicates an expected call of Clear
func (mr *MockCodecInterfaceMockRecorder) Clear() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Clear", reflect.TypeOf((*MockCodecInterface)(nil).Clear))
}

// GetStore mocks base method
func (m *MockCodecInterface) GetStore() store.IStore {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetStore")
	ret0, _ := ret[0].(store.IStore)
	return ret0
}

// GetStore indicates an expected call of GetStore
func (mr *MockCodecInterfaceMockRecorder) GetStore() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetStore", reflect.TypeOf((*MockCodecInterface)(nil).GetStore))
}

// GetStats mocks base method
func (m *MockCodecInterface) GetStats() *codec.Stats {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetStats")
	ret0, _ := ret[0].(*codec.Stats)
	return ret0
}

// GetStats indicates an expected call of GetStats
func (mr *MockCodecInterfaceMockRecorder) GetStats() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetStats", reflect.TypeOf((*MockCodecInterface)(nil).GetStats))
}
